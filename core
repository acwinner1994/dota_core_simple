#include <iostream>
#include <stdio.h>

using namespace std;
int number_color[2] = {};//各魔军已生成武士数量，0为红，1为蓝
int present_hour = 0;
int present_minute = 0;
int total[2] = {};
int warrior_health[5] = {};//依次为dragon-0，ninja-1，iceman-2，lion-3，wolf-4初始生命值
int warrior_attack[5] = {};//依次为dragon-0，ninja-1，iceman-2，lion-3，wolf-4初始攻击力
char warrior_name[5][10] = { "dragon","ninja","iceman","lion","wolf" };
char weapon_name[3][10] = { "sword","bomb","arrow" };
char color_name[2][10] = { "red","blue" };
int order[2][5] = { { 2,3,4,1,0 },{ 3,0,1,2,4 } };//两军生成武士顺序
int _total;
int city_number;
int arrow_attack;
int loyalty_down;
int total_minute;
int health_return[2] = {};
int number_in_head[2] = {};
bool last_color[2];
int order_now[2] = {};
bool end_of_warcraft = false;


void creat(void);
void go(void);
void award(void);
void print_health_in_head(int _color);
void print_case_number(int _number);

void creat(void)
{
	for (int i = 0; i < 2; i++)
	{
		if (total[i] >= warrior_health[(order[i][order_now[i]])])
		{
			warrior * warrior_temp = NULL;
			number_color[i]++;
			//dragon-0，ninja-1，iceman-2，lion-3，wolf-4
			if (order[i][order_now[i]] == 0)
			{
				warrior_temp = new dragon(i, number_color[i], 0);
			}
			else if (order[i][order_now[i]] == 3)
			{
				warrior_temp = new lion(i, number_color[i], 3);
			}
			else
			{
				warrior_temp = new warrior(i, number_color[i], order[i][order_now[i]]);
			}
			if (i == 0)
			{
				mycity[0].soldier[0] = warrior_temp;
			}
			else if (i == 1)
			{
				mycity[city_number + 1].soldier[1] = warrior_temp;
			}
			order_now[i] = (order_now[i] + 1) % 5;
		}
	}
	return;
}
void go(void)
{
	last_color[0] = false;
	last_color[1] = false;
	//初始，都没有将走到对方大本营的武士
	if (mycity[city_number].soldier[0] != NULL)
	{
		mycity[city_number + 1].go_next_city(&mycity[city_number], 0);
		last_color[0] = true;
	}
	for (int i = city_number; i > 0; i--)
	{
		mycity[i].go_next_city(&mycity[i - 1], 0);
	}
	if (mycity[1].soldier[1] != NULL)
	{
		mycity[0].go_next_city(&mycity[1], 1);
		last_color[1] = true;
	}
	for (int i = 1; i < city_number + 1; i++)
	{
		mycity[i].go_next_city(&mycity[i + 1], 1);
	}
	mycity[0].soldier[0] = NULL;
	mycity[city_number + 1].soldier[1] = NULL;
	if (mycity[0].reach_head(1))
	{
		printf("%03d:10 %s headquarter was taken\n", present_hour, color_name[0]);
		end_of_warcraft = true;
	}
	for (int i = 1; i < city_number + 1; i++)
	{
		mycity[i].print_reach();
	}
	if (mycity[city_number + 1].reach_head(0))
	{
		printf("%03d:10 %s headquarter was taken\n", present_hour, color_name[1]);
		end_of_warcraft = true;
	}
	return;
}
void award(void)
{
	//先奖励距离敌方大本营更近的武士
	
	for (int i = 1; i < city_number + 1; i++)
	{
		if (total[1] >= 8)
		{
			if (mycity[i].get_winner_color() == 1)
			{
				mycity[i].soldier[1]->get_award();
				total[1] -= 8;
				//
				//cout << "**********total - 8 奖励在" << color_name[1] << "给武士" << warrior_name[mycity[i].soldier[1]->type] << " " << mycity[i].soldier[1]->id << " 在城市" << mycity[i].city_id << " " << color_name[1] << " total=" << total[1] << endl;
				//
			}
		}
		else
		{
			break;
		}
	}
	for (int i = city_number; i > 0; i--)
	{
		if (total[0] >= 8)
		{
			if (mycity[i].get_winner_color() == 0)
			{
				mycity[i].soldier[0]->get_award();
				total[0] -= 8;
				//
				//cout << "**********total - 8 奖励在" << color_name[0] << "给武士" << warrior_name[mycity[i].soldier[0]->type] << " " << mycity[i].soldier[0]->id << " 在城市" << mycity[i].city_id << " " << color_name[0] <<" total=" << total[0] << endl;
				//
			}
		}
		else
		{
			break;
		}
	}
	//下面从各个城市回收该回收的生命元
	total[0] += health_return[0];
	//
	//cout << "**********total从health_return[0]中拿回" << health_return[0] << " " << color_name[0] << " total=" << total[0] << endl;
	//
	total[1] += health_return[1];
	//
	//cout << "**********total从health_return[1]中拿回" << health_return[1] << " " << color_name[1] << " total=" << total[1] << endl;
	//
	health_return[0] = 0;
	health_return[1] = 0;
	return;
}
void print_health_in_head(int _color)
{
	printf("%03d:50 %d elements in %s headquarter\n", present_hour, total[_color], color_name[_color]);
	return;
}
void print_case_number(int _number)
{
	printf("Case %d:\n", _number);
}

int main()
{
	int case_number;
	cin >> case_number;
	for (int z = 1; z <= case_number; z++)
	{
		cin >> _total >> city_number >> arrow_attack >> loyalty_down >> total_minute;
		for (int i = 0; i < 5; i++)
		{
			cin >> warrior_health[i];
		}
		for (int i = 0; i < 5; i++)
		{
			cin >> warrior_attack[i];
		}
		total[0] = total[1] = _total;
		end_of_warcraft = false;
		present_hour = -1;
		present_minute = 0;
		number_color[0] = 0;
		number_color[1] = 0;
		order_now[0] = 0;
		order_now[1] = 0;
		number_in_head[0] = 0;
		number_in_head[1] = 0;
		for (int i = 0; i <= city_number + 1; i++)
		{
			mycity[i].creat_city(i);
		}
		print_case_number(z);
		while(true)
		{
			present_hour++;
			//00分：武士降生事件
			creat();
			//05分：狮子逃跑事件
			present_minute += 5;
			if (present_minute > total_minute)
			{
				break;
			}
			mycity[0].lion_escape(0);
			for (int i = 1; i <= city_number; i++)
			{
				mycity[i].lion_escape(0);
				mycity[i].lion_escape(1);
			}
			mycity[city_number + 1].lion_escape(1);
			//10分：武士前进事件
			present_minute += 5;
			if (present_minute > total_minute)
			{
				break;
			}
			go();
			//20分：生命元回收事件
			present_minute += 10;
			if (present_minute > total_minute)
			{
				break;
			}
			for (int i = 1; i <= city_number; i++)
			{
				mycity[i].health_add();
			}
			//30分：生命元回收事件
			present_minute += 10;
			if (present_minute > total_minute || end_of_warcraft)
			{
				break;
			}
			for (int i = 1; i <= city_number; i++)
			{
				mycity[i].health_take();
			}
			//35分：射箭事件
			present_minute += 5;
			if (present_minute > total_minute)
			{
				break;
			}
			mycity[1].use_arrow(&mycity[2], 0);
			for (int i = 2; i < city_number; i++)
			{
				mycity[i].use_arrow(&mycity[i + 1], 0);
				mycity[i].use_arrow(&mycity[i - 1], 1);
			}
			mycity[city_number].use_arrow(&mycity[city_number - 1], 1);
			//38分：炸弹事件
			present_minute += 3;
			if (present_minute > total_minute)
			{
				break;
			}
			for (int i = 1; i <= city_number; i++)
			{
				mycity[i].use_bomb();
			}
			//40分：武士攻击事件，武士反击事件，奖励事件
			present_minute += 2;
			if (present_minute > total_minute)
			{
				break;
			}
			for (int i = 1; i <= city_number; i++)
			{
				mycity[i].fight();
			}
			award();
			//50分：司令部报告生命元事件
			present_minute += 10;
			if (present_minute > total_minute)
			{
				break;
			}
			print_health_in_head(0);
			print_health_in_head(1);
			//55分：武士报告武器事件
			present_minute += 5;
			if (present_minute > total_minute)
			{
				break;
			}
			for (int i = 0; i <= city_number + 1; i++)
			{
				mycity[i].print_weapon(0);
			}
			for (int i = 0; i <= city_number + 1; i++)
			{
				mycity[i].print_weapon(1);
			}
			//60分：判断时间事件
			present_minute += 5;
			if (present_minute > total_minute)
			{
				break;
			}
		}
	}
	return 0;
}
